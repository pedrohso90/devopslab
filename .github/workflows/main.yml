name: Pipeline GitHub Actions
on:
  push:
    branches:
      - main
jobs:
  cicd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Declare Envs
        run: |
          sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile

      - name: Create table in DB if not exist and configure the database connection in the application
        env: 
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_HOST_GCP: ${{ secrets.DB_HOST_GCP }}
          DB_NAME_GCP: ${{ secrets.DB_NAME_GCP }}
        run: |
          PGPASSWORD=$DB_PASS psql -h $DB_HOST -d $DB_NAME -U $DB_USER -f db/user.sql
          PGPASSWORD=$DB_PASS psql -h $DB_HOST_GCP -d $DB_NAME_GCP -U $DB_USER -f db/user.sql
          sed -i "s/host_heroku/$DB_HOST/g" app.py
          sed -i "s/name_heroku/$DB_NAME/g" app.py
          sed -i "s/pass_heroku/$DB_PASS/g" app.py
          sed -i "s/user_heroku/$DB_USER/g" app.py

      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web